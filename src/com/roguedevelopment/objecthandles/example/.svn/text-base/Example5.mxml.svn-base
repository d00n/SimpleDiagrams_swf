<?xml version="1.0" encoding="utf-8"?>
<!--
/**
 *  Latest information on this project can be found at http://www.rogue-development.com/objectHandles.html
 * 
 *  Copyright (c) 2009 Marc Hughes 
 * 
 *  Permission is hereby granted, free of charge, to any person obtaining a 
 *  copy of this software and associated documentation files (the "Software"), 
 *  to deal in the Software without restriction, including without limitation 
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense, 
 *  and/or sell copies of the Software, and to permit persons to whom the Software 
 *  is furnished to do so, subject to the following conditions:
 * 
 *  The above copyright notice and this permission notice shall be included in all 
 *  copies or substantial portions of the Software.
 * 
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, 
 *  INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
 *  PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT 
 *  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION 
 *  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE 
 *  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. 
 * 
 *  See README for more information.
 * 
 **/
-->
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" 
				width="100%" height="100%" 
				xmlns:example="com.roguedevelopment.objecthandles.example.*"
				horizontalScrollPolicy="off"
				verticalScrollPolicy="off"
				backgroundColor="#FFFFFF" borderStyle="solid" borderColor="#000000" borderThickness="2"
				creationComplete="init()"
				click="if( event.target == this ) objectHandles.selectionManager.clearSelection();"
				>
			

		<mx:Script>
		<![CDATA[
			import com.roguedevelopment.objecthandles.HandleDefinitions;
			import com.roguedevelopment.objecthandles.HandleRoles;
			import com.roguedevelopment.objecthandles.HandleDescription;
			import com.roguedevelopment.objecthandles.constraints.MovementConstraint;
			import com.roguedevelopment.objecthandles.constraints.SizeConstraint;
			import com.roguedevelopment.objecthandles.Handle;
			import com.roguedevelopment.objecthandles.ObjectHandles;
			import mx.effects.Tween;
			import mx.effects.Move;
			import com.roguedevelopment.objecthandles.example.SimpleSpriteShape;
			import com.roguedevelopment.objecthandles.example.SimpleDataModel;
			import com.roguedevelopment.objecthandles.example.SimpleFlexShape;
			
			protected var objectHandles:ObjectHandles;
		
			
			
			protected function init() : void
			{
				
				objectHandles = new ObjectHandles( this );
				

				objectHandles.registerComponent( button, button , HandleDefinitions.NO_ROTATE_DEFINITION);
				objectHandles.registerComponent( list, list );
				objectHandles.registerComponent( combo, combo, HandleDefinitions.DEFAULT_PLUS_MOVE_DEFINITION );
				
			}
		]]>
	</mx:Script>	
	
					
		<mx:Text selectable="false" text="It is possible to use the visual object AS the datamodel object.  But I highly recommend against this.  Don't do it unless you have some super-simple prototype-level thing to do." 
			width="400" color="#000000" fontSize="14" fontWeight="normal" left="5" top="5" height="194"/>
						
		<mx:Button x="57" y="88" label="Button" id="button" fontSize="18"/>
		<mx:List x="281" y="41" id="list"></mx:List>
		<mx:ComboBox id="combo"  x="101" y="230"/>
		
		

		

	
</mx:Canvas>
