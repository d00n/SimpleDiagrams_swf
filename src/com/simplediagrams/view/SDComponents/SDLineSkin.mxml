<?xml version="1.0" encoding="utf-8"?>
<s:SparkSkin 
    xmlns:fx="http://ns.adobe.com/mxml/2009" 
    xmlns:s="library://ns.adobe.com/flex/spark" 
    xmlns:mx="library://ns.adobe.com/flex/mx"
    xmlns:myComps="*"
    >
    
    <!-- host component -->
    <fx:Metadata>
    	[HostComponent("com.simplediagrams.view.SDComponents.SDLine")]
    </fx:Metadata>
    
    <fx:Script>
    <![CDATA[         
    	
    	import com.simplediagrams.util.Logger
    
        /* Define the skin elements that should not be colorized. 
        exclude symbol and text group */
       // static private const exclusions:Array = ["symbol", "textGroup"];
        
        /** 
         * @copy spark.skins.SparkSkin#colorizeExclusions
         */        
        //override public function get colorizeExclusions():Array {return exclusions;}
      
		public function onDoubleClick():void
		{
			
		}
        
    ]]>        
    </fx:Script>
    
    
    <!-- states -->
    <s:states>
        <s:State name="normal" />
        <s:State name="selected" />
    </s:states>
      
      <!-- draw a thicker invisible line behind the real one so there's more hit area for the mouse -->
    <s:Graphic id="hitAreaHelper" >
		
        <s:Path data="{hostComponent.linePath}" >
           	<s:stroke>
                <mx:SolidColorStroke color="#000000" weight="20" alpha=".01"  />
            </s:stroke>
        </s:Path>
    </s:Graphic>
   	
    <s:Graphic id="lineDrawing"  			   
			   >
        <s:Path data="{hostComponent.linePath}"  >
           	<s:stroke>
                <mx:SolidColorStroke color="{hostComponent.lineColor}" weight="{hostComponent.lineWeight}"  />
            </s:stroke>
        </s:Path>
    </s:Graphic>
           
    <s:Graphic 
    	id="startLineHitArea" 
    	includeIn="selected" 
    	doubleClickEnabled="true"  
    	x="{hostComponent.startX}"
    	y="{hostComponent.startY}" 
    	rotation="{hostComponent.startAngle}">
	   <s:Rect height="40" width="20" x="-20" y="-20"  >   
             <s:fill>
                  <s:SolidColor color="#000000" alpha=".4"/>
             </s:fill>
       </s:Rect>
    </s:Graphic>
    
    <s:Graphic id="startLineShape" 
			   x="{hostComponent.startX}" 
			   y="{hostComponent.startY}" 
			   rotation="{hostComponent.startAngle}"
			   
			   >
    	 <s:Path data="{hostComponent.startLineStylePath}" >
           	<s:stroke>
                <mx:SolidColorStroke color="{hostComponent.lineColor}" weight="{hostComponent.lineWeight}"  />
            </s:stroke>
        </s:Path>
    </s:Graphic>
    
    <s:Graphic id="startLineCircle"  
    	visible="{hostComponent.startLineCircleVisible}" 
    	x="{hostComponent.startX}" 
    	y="{hostComponent.startY}" 
    	rotation="{hostComponent.startAngle}"	
    	>
    	<s:Ellipse height="10" width="10" x="-10" y="-5"  >
          	<s:stroke>
               <s:SolidColorStroke color="{hostComponent.lineColor}" weight="{hostComponent.lineWeight}"/>
         	 </s:stroke>
   		 </s:Ellipse>
    </s:Graphic>        
	
	<s:Graphic id="startLineSolidCircle"  
			   visible="{hostComponent.startLineSolidCircleVisible}" 
			   x="{hostComponent.startX}" 
			   y="{hostComponent.startY}" 
			   rotation="{hostComponent.startAngle}"	
			   >
		<s:Ellipse height="10" width="10" x="-10" y="-5"  >
			<s:stroke>
				<s:SolidColorStroke color="{hostComponent.lineColor}" weight="{hostComponent.lineWeight}"/>
			</s:stroke>
			<s:fill>
				<s:SolidColor color="{hostComponent.lineColor}" />
			</s:fill>
		</s:Ellipse>
	</s:Graphic>       
    
    <s:Graphic  id="endLineHitArea" 
    	doubleClickEnabled="true" 
    	x="{hostComponent.endX}" 
    	y="{hostComponent.endY}" 
    	includeIn="selected" 
    	rotation="{hostComponent.endAngle}">
	   <s:Rect height="40" width="20"  y="-20" >   
         <s:fill>
              <s:SolidColor color="#000000" alpha=".4"/>
         </s:fill>
       </s:Rect>
    </s:Graphic>    
        
    <s:Graphic id="endLineShape"  
    	x="{hostComponent.endX}" 
    	y="{hostComponent.endY}" 
    	rotation="{hostComponent.endAngle}">
    	 <s:Path data="{hostComponent.endLineStylePath}" >
           	<s:stroke>
                <mx:SolidColorStroke color="{hostComponent.lineColor}" weight="{hostComponent.lineWeight}"  />
            </s:stroke>
        </s:Path>
    </s:Graphic>
            
    <s:Graphic id="endLineCircle" 
    	visible="{hostComponent.endLineCircleVisible}"  
    	x="{hostComponent.endX}" 
    	y="{hostComponent.endY}" 
    	rotation="{hostComponent.endAngle}">
    	<s:Ellipse height="10" width="10"  y="-5">
          	<s:stroke>
               <s:SolidColorStroke color="{hostComponent.lineColor}" weight="{hostComponent.lineWeight}"/>
         	 </s:stroke>
   		 </s:Ellipse>
    </s:Graphic>    
	
	<s:Graphic id="endLineSolidCircle" 
			   visible="{hostComponent.endLineSolidCircleVisible}"  
			   x="{hostComponent.endX}" 
			   y="{hostComponent.endY}" 
			   rotation="{hostComponent.endAngle}">
		<s:Ellipse height="10" width="10"  y="-5">
			<s:stroke>
				<s:SolidColorStroke color="{hostComponent.lineColor}" weight="{hostComponent.lineWeight}"/>
			</s:stroke>
			<s:fill>
				<s:SolidColor color="{hostComponent.lineColor}"/>
			</s:fill>
		</s:Ellipse>
	</s:Graphic>    
	
	<s:Label 	id="lblText"
				text="{hostComponent.text}" 
				color="{hostComponent.fontColor}"
			 	x="{hostComponent.textX}"
			 	y="{hostComponent.textY}"
			 />
        
   	<myComps:DragCircle id="startDragCircle" includeIn="selected"   />  

   	<myComps:DragCircle id="arcDragCircle" includeIn="selected"  />  

   	<myComps:DragCircle id="endDragCircle" includeIn="selected"  />  
   	    
</s:SparkSkin>